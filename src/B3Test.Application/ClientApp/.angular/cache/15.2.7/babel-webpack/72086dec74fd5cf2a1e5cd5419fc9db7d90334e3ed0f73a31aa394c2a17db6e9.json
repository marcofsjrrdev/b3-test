{"ast":null,"code":"import _asyncToGenerator from \"C:/Repos/b3-test/src/B3Test.Application/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { HomeComponent } from './home.component';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\ndescribe('HomeComponent', () => {\n  let component;\n  let fixture;\n  let httpClient;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [HttpClientTestingModule],\n      declarations: [HomeComponent]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(HomeComponent);\n    component = fixture.componentInstance;\n    httpClient = TestBed.inject(HttpClient);\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should calculate liquid value', () => {\n    const response = {\n      liquidValue: 5625\n    }; // Response Mocked\n    spyOn(httpClient, 'get').and.returnValue(of(response));\n    component.initialValue = 5000;\n    component.mounths = 12;\n    component.calcular();\n    expect(httpClient.get).toHaveBeenCalledOnceWith(`https://localhost:7123/api/calculatecdb/calculate?initialValue=5000&mounths=12`);\n    expect(component.liquidValue).toBe(response.liquidValue);\n  });\n});","map":{"version":3,"mappings":";AAAA,SAA2BA,OAAO,QAAQ,uBAAuB;AACjE,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,uBAAuB,QAAQ,8BAA8B;AACtE,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,EAAE,QAAQ,MAAM;AAEzBC,QAAQ,CAAC,eAAe,EAAE,MAAK;EAC7B,IAAIC,SAAwB;EAC5B,IAAIC,OAAwC;EAC5C,IAAIC,UAAsB;EAE1BC,UAAU,iCAAC,aAAW;IACpB,MAAMT,OAAO,CAACU,sBAAsB,CAAC;MACnCC,OAAO,EAAE,CAACT,uBAAuB,CAAC;MAClCU,YAAY,EAAE,CAACX,aAAa;KAC7B,CAAC,CAACY,iBAAiB,EAAE;EACxB,CAAC,EAAC;EAEFJ,UAAU,CAAC,MAAK;IACdF,OAAO,GAAGP,OAAO,CAACc,eAAe,CAACb,aAAa,CAAC;IAChDK,SAAS,GAAGC,OAAO,CAACQ,iBAAiB;IACrCP,UAAU,GAAGR,OAAO,CAACgB,MAAM,CAACb,UAAU,CAAC;EACzC,CAAC,CAAC;EAEFc,EAAE,CAAC,eAAe,EAAE,MAAK;IACvBC,MAAM,CAACZ,SAAS,CAAC,CAACa,UAAU,EAAE;EAChC,CAAC,CAAC;EAEFF,EAAE,CAAC,+BAA+B,EAAE,MAAK;IACvC,MAAMG,QAAQ,GAAG;MAAEC,WAAW,EAAE;IAAI,CAAE,CAAC,CAAC;IACxCC,KAAK,CAACd,UAAU,EAAE,KAAK,CAAC,CAACe,GAAG,CAACC,WAAW,CAACpB,EAAE,CAACgB,QAAQ,CAAC,CAAC;IAEtDd,SAAS,CAACmB,YAAY,GAAG,IAAI;IAC7BnB,SAAS,CAACoB,OAAO,GAAG,EAAE;IACtBpB,SAAS,CAACqB,QAAQ,EAAE;IAEpBT,MAAM,CAACV,UAAU,CAACoB,GAAG,CAAC,CAACC,wBAAwB,CAAC,gFAAgF,CAAC;IACjIX,MAAM,CAACZ,SAAS,CAACe,WAAW,CAAC,CAACS,IAAI,CAACV,QAAQ,CAACC,WAAW,CAAC;EAC1D,CAAC,CAAC;AACJ,CAAC,CAAC","names":["TestBed","HomeComponent","HttpClientTestingModule","HttpClient","of","describe","component","fixture","httpClient","beforeEach","configureTestingModule","imports","declarations","compileComponents","createComponent","componentInstance","inject","it","expect","toBeTruthy","response","liquidValue","spyOn","and","returnValue","initialValue","mounths","calcular","get","toHaveBeenCalledOnceWith","toBe"],"sourceRoot":"","sources":["C:\\Repos\\b3-test\\src\\B3Test.Application\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { HomeComponent } from './home.component';\r\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { of } from 'rxjs';\r\n\r\ndescribe('HomeComponent', () => {\r\n  let component: HomeComponent;\r\n  let fixture: ComponentFixture<HomeComponent>;\r\n  let httpClient: HttpClient;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [HttpClientTestingModule],\r\n      declarations: [HomeComponent],\r\n    }).compileComponents();\r\n  });\r\n\r\n  beforeEach(() => {\r\n    fixture = TestBed.createComponent(HomeComponent);\r\n    component = fixture.componentInstance;\r\n    httpClient = TestBed.inject(HttpClient);\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('should calculate liquid value', () => {\r\n    const response = { liquidValue: 5625 }; // Response Mocked\r\n    spyOn(httpClient, 'get').and.returnValue(of(response));\r\n\r\n    component.initialValue = 5000;\r\n    component.mounths = 12;\r\n    component.calcular();\r\n\r\n    expect(httpClient.get).toHaveBeenCalledOnceWith(`https://localhost:7123/api/calculatecdb/calculate?initialValue=5000&mounths=12`);\r\n    expect(component.liquidValue).toBe(response.liquidValue);\r\n  });\r\n});\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}